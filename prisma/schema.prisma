// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model user {
    id Int  @default(autoincrement()) @id @db.UnsignedInt
    name String @db.VarChar(50)
    email String @db.VarChar(50)
    baseUrl String @default("https://www.google.com") @map("base_url")
    authCode  Int @default(0) @map("auth_code")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
    likes like_rel[]
    boards board[]
    comments comment[]

    @@unique([email, name])
}

model board {
    id Int  @default(autoincrement()) @id @db.UnsignedInt
    title String @db.VarChar(50)
    user user @relation(fields: [userId], references: [id])
    userId Int @db.UnsignedInt @map("user_id")
    context String @db.VarChar(512)
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
    likes like_rel[]
    comments comment[]
    images image[]
    categories categories_on_boards[]
}

model category {
    id    Int   @db.UnsignedInt @id @default(autoincrement())
    name  String @db.VarChar(30)
    createdAt DateTime @default(now()) @map("created_at")
    boards categories_on_boards[]
}

model categories_on_boards {
    board       board     @relation(fields: [boardId], references: [id])
    boardId     Int @db.UnsignedInt @map("board_id") // relation scalar field (used in the `@relation` attribute above)
    category   category @relation(fields: [categoryId], references: [id])
    categoryId Int @db.UnsignedInt @map("category_id") // relation scalar field (used in the `@relation` attribute above)

    @@id([boardId, categoryId])
}

model comment {
    id Int  @default(autoincrement()) @id
    user user @relation(fields: [userId], references: [id])
    userId Int @db.UnsignedInt @map("user_id")
    board board @relation(fields: [boardId], references: [id])
    boardId Int @db.UnsignedInt @map("board_id")
    context String @db.VarChar(512)
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
}

model like_rel {
    id Int  @default(autoincrement()) @id
    user user @relation(fields: [userId], references: [id])
    userId Int @db.UnsignedInt @map("user_id")
    board board @relation(fields: [boardId], references: [id])
    boardId Int @db.UnsignedInt @map("board_id")
    count Int  @default(0)
    createdAt DateTime @default(now()) @map("created_at")
}

model image {
    id Int @default(autoincrement()) @id
    board board @relation(fields: [boardId], references: [id])
    boardId Int @db.UnsignedInt @map("board_id")
    imgUrl String @db.VarChar(255) @map("img_url")
    created_at DateTime @default(now())
}